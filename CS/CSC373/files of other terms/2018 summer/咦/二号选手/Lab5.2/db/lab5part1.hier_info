|lab5part1
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
HEX0[0] <= hexDecoder:h0.HEX0
HEX0[1] <= hexDecoder:h0.HEX0
HEX0[2] <= hexDecoder:h0.HEX0
HEX0[3] <= hexDecoder:h0.HEX0
HEX0[4] <= hexDecoder:h0.HEX0
HEX0[5] <= hexDecoder:h0.HEX0
HEX0[6] <= hexDecoder:h0.HEX0
HEX1[0] <= hexDecoder:h1.HEX0
HEX1[1] <= hexDecoder:h1.HEX0
HEX1[2] <= hexDecoder:h1.HEX0
HEX1[3] <= hexDecoder:h1.HEX0
HEX1[4] <= hexDecoder:h1.HEX0
HEX1[5] <= hexDecoder:h1.HEX0
HEX1[6] <= hexDecoder:h1.HEX0


|lab5part1|EightBitCounter:e1
enable => enable.IN1
clock => clock.IN8
reset => reset.IN8
Q[0] <= tFlipFlop:t0.out
Q[1] <= tFlipFlop:t1.out
Q[2] <= tFlipFlop:t2.out
Q[3] <= tFlipFlop:t3.out
Q[4] <= tFlipFlop:t4.out
Q[5] <= tFlipFlop:t5.out
Q[6] <= tFlipFlop:t6.out
Q[7] <= tFlipFlop:t7.out


|lab5part1|EightBitCounter:e1|tFlipFlop:t0
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t1
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t2
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t3
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t4
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t5
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t6
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|EightBitCounter:e1|tFlipFlop:t7
reset => out~reg0.ACLR
clock => out~reg0.CLK
toggle => out~reg0.ENA
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0
SW[0] => SW[0].IN7
SW[1] => SW[1].IN7
SW[2] => SW[2].IN7
SW[3] => SW[3].IN7
HEX0[0] <= segment0:s0.s
HEX0[1] <= segment1:s1.s
HEX0[2] <= segment2:s2.s
HEX0[3] <= segment3:s3.s
HEX0[4] <= segment4:s4.s
HEX0[5] <= segment5:s5.s
HEX0[6] <= segment6:s6.s


|lab5part1|hexDecoder:h0|segment0:s0
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment1:s1
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment2:s2
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment3:s3
c3 => s.IN0
c3 => s.IN0
c2 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment4:s4
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment5:s5
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h0|segment6:s6
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1
SW[0] => SW[0].IN7
SW[1] => SW[1].IN7
SW[2] => SW[2].IN7
SW[3] => SW[3].IN7
HEX0[0] <= segment0:s0.s
HEX0[1] <= segment1:s1.s
HEX0[2] <= segment2:s2.s
HEX0[3] <= segment3:s3.s
HEX0[4] <= segment4:s4.s
HEX0[5] <= segment5:s5.s
HEX0[6] <= segment6:s6.s


|lab5part1|hexDecoder:h1|segment0:s0
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment1:s1
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment2:s2
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment3:s3
c3 => s.IN0
c3 => s.IN0
c2 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment4:s4
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN0
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment5:s5
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


|lab5part1|hexDecoder:h1|segment6:s6
c3 => s.IN0
c3 => s.IN0
c3 => s.IN0
c2 => s.IN1
c2 => s.IN1
c2 => s.IN1
c1 => s.IN1
c1 => s.IN1
c1 => s.IN1
c0 => s.IN1
c0 => s.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE


