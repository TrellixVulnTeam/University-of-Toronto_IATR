Q1

(a) TRUE

Argument by contradiction: suppose V_1, ..., V_t are connected components such that t < k, then |E| = |E_1| + ... + |E_t| >= (|V_1|-1) + ... (|V_t| -1) >= n - t >= n - k + 1, where E_i is the set of edges in component i.

(b) FALSE

   2
a ---b
 \   |
 3\  | 2
   \ |
     c

Running Dijkstra from a would return the tree consisting of edges a->b and a->c of total cost 5. But MST edges are {a,b},{b,c} of cost 4.

(c) TRUE

Since each spanning tree has exactly (n-1) edges, the weight of each spanning tree is modified by adding exactly (n-1). This operation is linear and preserves the order of spanning trees by weight.

(d) FALSE

Update() (aka Relax()) procedure is called on edge (u,v) is called once when u is extracted from the priority queue. Since nodes are never reinserted into the queue, update() can be called on (u,v) only once.

(e) FALSE
          A   
 0.5/1   ^ \  0.5/1
        /   \ 
       /     v  1/1
      S       C----->T
       \     ^
  0.5/1 \   / 0.5/1
         v / 
          B

The notation F/C indicates that we push F units of all along an edge of capacity C. Observe that all capacities are 1, so they are integral, but flow is fractional, since it has values 0.5 on some edges. The flow is maximum as witnessed by the cut ({S,A,C,B},{T}).

(f) TRUE

Multiplying each edge by positive constant c, modifies each path by the same proportion. Since this operation is linear, it preserves the relative order of paths by weight.

(g) FALSE

a --> b --> c

Run DFS from a, find that discovery time of a is 1 and finishing time of a is 6, but the graph is not strongly connected.

(h) FALSE

          A   
         ^|\  
      C / | \ C
       /  |  v  
      S   |1  T
       \  |  ^
      C \ | / C
         vv/ 
          B

C is a large constant in the above example. Then FF might choose paths S->A->B->T followed by S->B->A->T, etc. It would require 2C runs to find the max flow of 2C, which is not polynomial in the size of the input - capacity C requires O(log C) bits to represent.

(i) FALSE

See wikipedia example here: https://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm#Non-terminating_example

(j) FALSE

Petersen graph is 3-regular of girth 5 on 10 nodes. See https://en.wikipedia.org/wiki/Petersen_graph
It is one of the most famous graphs in all of graph theory.