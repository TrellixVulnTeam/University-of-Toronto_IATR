==============================================================================
CSC 373                 Tutorial Exercises for Week  6               Fall 2014
==============================================================================


 1. Consider the following "teaching assignment" problem:
    Input: Set of profs p_1,...,p_n with teaching loads L_1,...,L_n, and set
        of courses c_1,...,c_m with number of sections S_1,...,S_m, along with
        subsets of courses that each prof is available to teach -- each prof
        p_i has its own subset A_i (_ {c_1,...,c_m}.
    Output: Assignment of profs to courses so that:
          . each prof p_i assigned exactly L_i courses,
          . each course c_j assigned exactly S_j profs,
          . no prof assigned a course outside their available set.

    Show how to represent this problem as a network flow, and how to solve it
    using network flow algorithms. Justify carefully that your solution is
    correct and can be obtained in polytime.


 2. Consider a set of mobile computing clients in a certain town who each need
    to be connected to one of several possible "base stations". We'll suppose
    there are n clients, with the position of each client specified by its
    (x,y) coordinates in the plane. There are also m base stations, each of
    whose position is specified by (x,y) coordinates as well.

    We wish to connect each client to exactly one base station. Our choice of
    connections is constrained in the following ways. There is a "range
    parameter" r -- a client can only be connected to a base station that is
    within distance r. There is also a "load parameter" L -- no more than L
    clients can be connected to any single base station.

    (a) Show how to represent this problem as a network flow, and how to solve
        it using network flow algorithms. Justify carefully that your solution
        is correct and can be obtained in polytime.

    (b) Show how to represent this problem as a linear program, and how to
        solve it using linear programming algorithms. Justify carefully that
        your solution is correct. Can you guarantee that your algorithm runs
        in polytime?

