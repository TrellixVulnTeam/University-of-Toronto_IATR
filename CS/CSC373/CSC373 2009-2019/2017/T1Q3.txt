Question 3

(a)
C[i] = TRUE if the string s[1..i] can be reconstructed as a sequence of valid words.

0 <= i <= n

(b)
C[0] = TRUE

C[i] =   OR   (dict(s[j..i]) AND C[j-1])
       1<=j<=i

(c)
s[1..i] can be reconstructed if and only if it contains last word from some index j to i & the remaining part s[1..j] can be reconstructed.

(d)
Reconstruct(s,n)
  init C - array with (n+1) elements, 0-based
  C[0] = TRUE
  for i = 1 to n
    C[i] = FALSE
    for j = 1 to i
      if C[j-1] AND dict(s[j..i])
        C[i] = TRUE
  return C[n]

(e)
The algorithm has two nested for loops, each executed <= n times and inner-most section takes O(1) time. Thus, the overall runtime is O(n^2)