{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12840\viewh11080\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
#G is graph we create in part(a), L is straight line of vertices we get from part(c).\
\
def find_number_of_rows(G,L): \
    add an attribute called row to each vertex in L\
    \
    for u in L:\
        u.row = 1\
    \
    for u in L:\
        for v in G.Adj[u]:\
            if u.row >= v.row:\
                v.row = u.row + 1\
                \
    return max\{ u.row | u in L\}}